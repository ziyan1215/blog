<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on XuziYan</title>
    <link>https://xuziyan.ga/tags/git/</link>
    <description>Recent content in Git on XuziYan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 28 Dec 2018 12:37:55 +0000</lastBuildDate>
    
	<atom:link href="https://xuziyan.ga/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git基本用法</title>
      <link>https://xuziyan.ga/archive/1545971875/</link>
      <pubDate>Fri, 28 Dec 2018 12:37:55 +0000</pubDate>
      
      <guid>https://xuziyan.ga/archive/1545971875/</guid>
      <description>安装完后的配置 安装完成后，还需要最后一步设置，在命令行输入：
$ git config --global user.name &amp;quot;Your Name&amp;quot;
$ git config --global user.email &amp;quot;email@example.com&amp;quot;
因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。
注意git config命令的&amp;ndash;global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。
查看用户名以及邮箱：
Administrator@LY-20170308GWTH MINGW64 /d/exercise (master) $ git config user.name xuziyan Administrator@LY-20170308GWTH MINGW64 /d/exercise (master) $ git config user.email xuziyanmiss@gmail.com  配置Git仓库 通过git init命令把这个目录变成Git可以管理的仓库：
第一步，用命令git add告诉Git，把文件添加到仓库：
$ git add readme.txt
第二步，用命令git commit告诉Git，把文件提交到仓库：
$ git commit -m &amp;quot;wrote a readme file&amp;quot;
要关联一个远程库，使用命令:
git remote add origin git@server-name:path/repo-name.git；
关联后，使用命令第一次推送master分支的所有内容:
git push -u origin master</description>
    </item>
    
    <item>
      <title>GIT常用命令</title>
      <link>https://xuziyan.ga/archive/1545969891/</link>
      <pubDate>Fri, 28 Dec 2018 12:04:51 +0000</pubDate>
      
      <guid>https://xuziyan.ga/archive/1545969891/</guid>
      <description>常用命令 git init 项目初始化 git clone 拉取项目 git add . 添加到暂存区 git commit -m 添加commit信息 git push 将本地分支推送到服务器上去 git pull origin master 本地与服务器端同步 git log 查看日志 git status 查看当前状态 git tag 查看版本号 git diff 查看尚未提交的更新  实际运用 拉取远程仓库内容 git pull origin master  推送本地到远程仓库 git push -u origin master  创建dev分支 git checkout -b dev   git checkout命令加上-b参数表示创建并切换，相当于以下两条命令
 git branch dev git checkout dev  用git branch命令查看当前分支</description>
    </item>
    
  </channel>
</rss>